/*
Задание
У Марты потерялся кот Маркиз. Прохожий сказал ей, что видел похожего кота у одного из трёх домов около почтового отделения. На вопрос, у какого из домов он видел Маркиза, прохожий может вспомнить цвет дома, а также количество этажей в доме. Возможна ситуация, когда прохожий забыл часть информации или вообще всё.
Напишите программу, которая на основе показаний прохожего помогает принять Марте решение, в какие из трёх домов нужно зайти.
Формат входных и выходных данных
На вход программы подаются следующие данные, разделяемые пробелом:
цвет первого дома и количество этажей в нём,
цвет второго дома и количество этажей в нём,
цвет третьего дома и количество этажей в нём,
цвет дома и количество этажей, которые сообщил прохожий. Если прохожий не помнит цвет дома или этажность, вместо цвета подаётся строка ? (вопросительный знак), а вместо количества этажей — число -1.
Программа должна вывести в порядке возрастания номера домов, в которые Марте надо зайти, по одному в каждой строке. Номера домов выводятся в виде чисел 1, 2 или 3. Номера домов, которые посещать не нужно, выводиться не должны.

Ввод
red 3 green 3 green 2 green -1 
Вывод
2
3 

В этом примере прохожий помнит только цвет дома, green, а количество этажей нет. Поэтому Марте нужно зайти в дома номер 2 и 3.
Ввод
red 2 green 1 red 3 red 3 
Вывод
3 

Здесь прохожий сообщил и цвет дома, и его этажность: red 3. Поэтому Марте надо посетить только дом номер 3.
Ввод
red 1 green 2 blue 3 yellow 3 
Вывод

Очевидец сообщил, что видел кота в трёхэтажном жёлтом доме, однако такого дома у почтового участка нет: единственный трёхэтажный дом — синего цвета. Вероятно, прохожий всё перепутал — такое тоже бывает.
Ввод
grey 5 grey 5 grey 5 grey 5 
Вывод
1
2
3 
Кот находится в одной из этих серых пятиэтажек. Придётся зайти во все три дома.
*/

#include <iostream>

using namespace std;

int main() {

string color1, color2, color3, color4;
int numb1, numb2, numb3, numb4;
    
    cin >> color1 >> numb1 >> color2 >> numb2 >> color3 >> numb3 >> color4 >> numb4;
    
    if ( ((color1 == color4) && (numb1 == numb4)) || ((color1 == color4) && (numb4 == -1)) || ((color4 == "?"s) && (numb4 == -1)) || ((color4 == "?"s) && (numb1 == numb4)) ) {
        cout << 1 << endl;
    }
    
    if ( ((color2 == color4) && (numb2 == numb4)) || ((color2 == color4) && (numb4 == -1)) || ((color4 == "?"s) && (numb4 == -1)) || ((color4 == "?"s) && (numb2 == numb4)) ) {
        cout << 2 << endl;
    }
    
    if ( ((color3 == color4) && (numb3 == numb4)) || ((color3 == color4) && (numb4 == -1)) || ((color4 == "?"s) && (numb4 == -1)) || ((color4 == "?"s) && (numb3 == numb4)) ) {
        cout << 3 << endl;
    }

}